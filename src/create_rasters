#! /usr/bin/bash

PROJECT_DIR="/home/ian/Documents/projects/bike_lanes/citibike_sdss"
DATA_DIR=$PROJECT_DIR"/data/prepared/"
OUTPUT_DIR=$PROJECT_DIR"/data/processed/grass_script_outputs/"

COARSE_RES=100
FINE_RES=10

#########################
# Function declarations #
#########################

load_layer () {
    filename=$1
    layer_to_import=$2
    new_layer_name=$3
    full_path="${DATA_DIR}${filename}"
    v.import -o $full_path snap=1e-05 layer=$layer_to_import output=$new_layer_name
}

save_vector () {
    output_path="${OUTPUT_DIR}${2}"
    v.out.ogr input=$1 output=$output_path --overwrite
    }

save_raster () {
    input_raster=$1
    output_filename=$2
    output_path="${OUTPUT_DIR}${output_filename}"
    r.out.gdal input=$input_raster output=$output_path --overwrite
}

rasterize_vector () {
    # Create a new raster layer from a vector.
    input_v_name=$1
    input_v_type=$2
    output_r_name=$3
    attribute_column=$4
    v.to.rast input=$input_v_name type=$input_v_type output=$output_r_name \
	      use=attr attribute_column=$attribute_column --overwrite
}

convert_char_col_to_int () {
    # Replace attribute table char column with int column with same values.
    
    vector_map=$1
    char_column=$2
    int_column="${char_column}_num"
    # Add a new int column and update its values from the char column
    v.db.addcolumn $vector_map column="${int_column} integer"
    v.db.update $vector_map column=$int_column query_col=$char_column
    # Drop the char column and rename the int column to the original name
    v.db.dropcolumn map=$vector_map columns=$char_column
    v.db.renamecolumn map=$vector_map column=$int_column,$char_column
    }

##################
# Import vectors #
##################
# ACS population
load_layer acs.gpkg acs V_ACS

# NYC Open Data
load_layer open_data.gpkg bike_routes V_BIKE_ROUTES
load_layer open_data.gpkg boroughs V_BOROUGHS
load_layer open_data.gpkg motor_vehicle_crashes V_CRASHES
load_layer open_data.gpkg streets V_STREETS

# GBFS
load_layer gbfs.gpkg status_peak_summary V_GBFS_PEAK
load_layer gbfs.gpkg status_offpeak_summary V_GBFS_OFFPEAK

# Suggest a Station
load_layer sas.gpkg sas V_SAS

# MTA turnstile data
load_layer mta_2023.gpkg stations V_MTA_STATIONS

#######################################
# Create Voronoi diagrams for stations#
#######################################
v.voronoi input=V_GBFS_PEAK output=V_GBFS_PEAK_VORONOI

###########################
# Rasterize vector layers #
###########################
g.region vector=V_BOROUGHS res=$COARSE_RES

rasterize_vector V_ACS area R_ACS population
convert_char_col_to_int V_BOROUGHS boro_code
rasterize_vector V_BOROUGHS area R_BOROUGHS boro_code

save_raster R_ACS acs_pop.gtiff
# r_out R_BOROUGHS BOROUGHS boroughs.gtiff
g.list vector > vector.txt
g.list raster > raster.txt
